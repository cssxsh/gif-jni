name: "build"
on: [ push, pull_request ]

jobs:
  windows-build:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Rust
        uses: hecrj/setup-rust-action@master
        with:
          rust-version: nightly

      - name: Install LLVM
        run: choco install llvm

      - name: Install Rust Target
        shell: bash
        run: |
          rustup target add x86_64-pc-windows-msvc

      - name: Build Windows X64
        shell: bash
        run: |
          cargo build --package gif-jni --lib --release --target x86_64-pc-windows-msvc

      - name: Rename Library File Name
        shell: bash
        run: |
          mkdir library
          cp target/x86_64-pc-windows-msvc/release/gif_jni.dll library/gif-windows-x64.dll
          sha256sum library/gif-windows-x64.dll | awk '{ print $1 }' > library/gif-windows-x64.dll.sha256

      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: windows-build
          path: library/*

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')

  linux-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Rust
        uses: hecrj/setup-rust-action@master
        with:
          rust-version: nightly

      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: "13.0.1"

      - name: Install Rust Target
        shell: bash
        run: |
          rustup target add x86_64-unknown-linux-gnu
          rustup target add aarch64-unknown-linux-gnu
          sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu

      - name: Build Linux X64
        shell: bash
        run: |
          cargo build --package gif-jni --lib --release --target x86_64-unknown-linux-gnu

      - name: Build Linux ARM64
        shell: bash
        run: |
          cargo build --package gif-jni --lib --release --target aarch64-unknown-linux-gnu
        env:
          CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc
          LD_LIBRARY_PATH: "/usr/lib/fontconfig:/usr/lib/freetype/:"

      - name: Rename Library File Name
        shell: bash
        run: |
          mkdir library
          cp target/x86_64-unknown-linux-gnu/release/libgif_jni.so library/libgif-linux-x64.so
          sha256sum library/libgif-linux-x64.so | awk '{ print $1 }' > library/libgif-linux-x64.so.sha256
          cp target/aarch64-unknown-linux-gnu/release/libgif_jni.so library/libgif-linux-arm64.so
          sha256sum library/libgif-linux-x64.so | awk '{ print $1 }' > library/libgif-linux-arm64.so.sha256

      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: linux-build
          path: library/*

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')

  android-build:
    runs-on: ubuntu-latest
    # container: ghcr.io/pragmatrix/rust-skia-linux:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Rust
        uses: hecrj/setup-rust-action@master
        with:
          rust-version: nightly

      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: "13.0.1"

      - name: Install Rust Target
        shell: bash
        run: |
          rustup target add x86_64-linux-android
          rustup target add aarch64-linux-android

      - name: Install Android NDK
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r21e

      - name: Build Android X64
        shell: bash
        run: |
          cargo build --package gif-jni --lib --release --target x86_64-linux-android
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
          CC_X86_64_LINUX_ANDROID: x86_64-linux-android26-clang
          CXX_X86_64_LINUX_ANDROID: x86_64-linux-android26-clang++
          CARGO_TARGET_X86_64_LINUX_ANDROID_LINKER: x86_64-linux-android26-clang

      - name: Build Android ARM64
        shell: bash
        run: |
          cargo build --package gif-jni --lib --release --target aarch64-linux-android
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
          CC_AARCH64_LINUX_ANDROID: aarch64-linux-android26-clang
          CXX_AARCH64_LINUX_ANDROID: aarch64-linux-android26-clang++
          CARGO_TARGET_AARCH64_LINUX_ANDROID_LINKER: aarch64-linux-android26-clang

      - name: Rename Library File Name
        shell: bash
        run: |
          mkdir library
          cp target/x86_64-linux-android/release/libgif_jni.so library/libgif-android-x64.so
          sha256sum library/libgif-android-x64.so | awk '{ print $1 }' > library/libgif-android-x64.so.sha256
          cp target/aarch64-linux-android/release/libgif_jni.so library/libgif-android-arm64.so
          sha256sum library/libgif-android-arm64.so | awk '{ print $1 }' > library/libgif-android-arm64.so.sha256

      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: linux-build
          path: library/*

  macos-build:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Rust
        uses: hecrj/setup-rust-action@master
        with:
          rust-version: nightly

      - name: Remove LLVM (macOS)
        run: brew uninstall llvm

      - name: Install Rust Target
        shell: bash
        run: |
          rustup target add aarch64-apple-darwin
          rustup target add x86_64-apple-darwin

      - name: Build MacOS ARM64
        shell: bash
        run: |
          cargo build --package gif-jni --lib --release --target aarch64-apple-darwin

      - name: Build MacOS X64
        shell: bash
        run: |
          cargo build --package gif-jni --lib --release --target x86_64-apple-darwin

      - name: Rename Library File Name
        shell: bash
        run: |
          mkdir library
          cp target/x86_64-apple-darwin/release/libgif_jni.dylib library/libgif-macos-x64.dylib
          shasum -a 256 library/libgif-macos-x64.dylib | awk '{ print $1 }' > library/libgif-macos-x64.dylib.sha256
          cp target/aarch64-apple-darwin/release/libgif_jni.dylib library/libgif-macos-arm64.dylib
          shasum -a 256 library/libgif-macos-arm64.dylib | awk '{ print $1 }' > library/libgif-macos-arm64.dylib.sha256

      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: macos-build
          path: library/*

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')

